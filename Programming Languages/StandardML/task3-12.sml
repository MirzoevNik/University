fun y (_, _, 0) = 4.7         (* при N=0 - результат y0 *)
  | y (x, e, N) =             (* иначе определим две вспомогательные функции *)
      let
        (* функция yNext - функция вычисления i-го элемента последовательности
         * yPred и yPredpred - i-1-й i-2-й элементы последовательности
         * соответственно *)
        fun yNext (yPred, i) =
          let
            (* вычисляется yCur - i-й элемент последовательности *)
            val yCur = Math.sin yPred + x
          in
            if abs (yCur - yPred) < e then yCur
            else
              (* если i достигло значения N, то вернуть yCur как результат
               * в противном случае запускается вычисление i+1-го элемента *)
              if i >= N then yCur
              else yNext (yCur, i + 1)
          end
      in
        (* запуск вычисления 2-го элемента последовательности *)
        yNext (y (x, e, 0), 1)
      end;